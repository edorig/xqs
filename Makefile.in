
######################
#
# * toplevel * Makefile for xqs( generated by configure )
#
#############################

VERSION = 1.0
SHELL = /bin/sh

KBD_DEF = @kbd_tab_def@

# Compiler and flags
CC = @CC@
CFLAGS = -ansi -Wall -pedantic -O2

OBJS = src/main.o src/WindowTab.o src/DisplayTab.o src/KeyboardTab.o \
	src/PropertiesTab.o src/AccessTab.o src/ClientsTab.o \
	src/ResourcesTab.o src/misc.o src/WinTree.o src/Menu.o src/Prefs.o

# all defines
DEFS = $(KBD_DEF)

# executable name
EXE = @exe@

#################################
#
# X libraries, X header files and special flags for linking with X
#
##################################

#
# location of include files for the Xlib and Motif
X_INCLUDE = 

# location of the Xlib libraries
LIBX = 

#  Motif libraries
LIBXM = @motif_libraries@ -lXm

# Athena libraries
LIBXAW = -lXaw

# X extension library, needed for Athena and Motif 2.0
LIBXEXT = -lXext

# X11 library
LIBX11 = -lX11

# X toolkit amd more utilities
LIBXT = -lXt -lXmu

# local library for xqs and the Xb lib
LIBXQSDIR = ./lib
LIBXQS =  -L$(LIBXQSDIR)  -lxqs
LIBXBDIR = $(LIBXQSDIR)/Xb-1.0
LIBXB = -L$(LIBXBDIR) -lXb

SRCDIR= @top_srcdir@/src
INCLUDE = -I @top_srcdir@/include

# All of the above libraries
ALL_X_LIBS = $(LIBXQS) $(LIBXB) $(LIBX) $(LIBXM) $(LIBXAW) $(LIBXEXT) $(LIBXT) $(LIBX11) 


#####################
#
# Misc. libraries
#
#####################

# other libs, needed for network functions, etc.
OTHER_LIBS = -lnsl

# all libraries 
ALL_LIBS = $(ALL_X_LIBS) $(OTHER_LIBS)
ALL_INCLUDES = $(INCLUDE) $(X_INCLUDE)

###########################
#
# Targets *(should not need to edit anything below this line)
#
###########################

all: src libs
	$(CC) $(OBJS) $(CFLAGS) $(DEFS) $(ALL_INCLUDES) $(ALL_LIBS) -o $(EXE)

main:
	$(CC) $(OBJS) $(CFLAGS) $(DEFS) $(ALL_INCLUDES) $(ALL_LIBS) -o $(EXE)

src: $(OBJS)

$(OBJS):
	cd $(SRCDIR) ; $(MAKE)	

libs:
	cd $(LIBXQSDIR) ; $(MAKE)

dist:
	mkdir ../xqs-$(VERSION) ; cp -r * ../xqs-$(VERSION)
	cd ../xqs-$(VERSION) ; rm -f Makefile config.log config.cache config.status
	cd ../ ; tar cvf - ./xqs-$(VERSION) | gzip > xqs-$(VERSION).tar.gz

tidy:
	rm -f core `find . -name '*.[as]' -print`
	rm -f core `find . -name 'core' -print`
	rm -f core `find . -name '*~' -print`
	rm -f xqs a.out

config-clean: 
	rm -f Makefile config.log config.cache config.status

clean: tidy
	rm -f core `find . -name '*.[oas]' -print`
	rm -f xqs-$(VERSION).tar.gz

